#!/bin/bash
set -e
set -x

BINUTILS=binutils-2.25
GCC=gcc-4.9.3


if [[ ${ARCH} == "amd64" ]] ; then
  TRIPLE=x86_64-none-elf
elif [[ ${ARCH} == "armv7" ]]; then
  TRIPLE=arm-elf-eabi
else
  echo "Unknown architecture '${ARCH}' in BuildCrossCompiler"
  exit 1
fi

PREFIX=${PWD}/.prefix/
PATH=${PREFIX}bin:${PATH}

if [[ -e ${PREFIX}${TRIPLE}-gcc ]]; then
	exit 0
fi

mkdir -p .cross_build
cd .cross_build

test -e ${BINUTILS}.tar.bz2 || wget http://ftp.gnu.org/gnu/binutils/${BINUTILS}.tar.bz2
test -e ${GCC}.tar.bz2 || wget http://ftp.gnu.org/gnu/gcc/${GCC}/${GCC}.tar.bz2

test -e ${BINUTILS}/configure || tar -xf ${BINUTILS}.tar.bz2
test -e ${GCC}/configure || tar -xf ${GCC}.tar.bz2
cd ${GCC}
test -e mpfr || ./contrib/download_prerequisites
cd ..

mkdir -p ${ARCH}
cd ${ARCH}
(mkdir -p binutils && cd binutils && ../../${BINUTILS}/configure --prefix=${PREFIX} --disable-nls --target=${TRIPLE} && echo "MAKEINFO = :" >> Makefile && make -j 3 && make install)
(mkdir -p gcc && cd gcc && ../../${GCC}/configure --prefix=${PREFIX} --disable-nls --enable-langs=c --target=${TRIPLE} && make all-gcc all-target-libgcc -j 3 && make install-gcc install-target-libgcc)

